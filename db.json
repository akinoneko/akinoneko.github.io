{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-7.jpg","path":"background/bg-7.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-8.jpg","path":"background/bg-8.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/GitHub.png","path":"img/GitHub.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/SegmentFault.png","path":"img/SegmentFault.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/TiddlyWiki.png","path":"img/TiddlyWiki.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/V2EX.png","path":"img/V2EX.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/coderwall.png","path":"img/coderwall.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/delicious.png","path":"img/delicious.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/facebook.png","path":"img/facebook.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/google.png","path":"img/google.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/linkedin.png","path":"img/linkedin.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/mail.png","path":"img/mail.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/pinboard.png","path":"img/pinboard.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/pinterest.png","path":"img/pinterest.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/rss.png","path":"img/rss.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/twitter.png","path":"img/twitter.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/新浪微博.png","path":"img/新浪微博.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/知乎.png","path":"img/知乎.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/简书.png","path":"img/简书.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/网易云音乐.png","path":"img/网易云音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/虾米音乐.png","path":"img/虾米音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/豆瓣.png","path":"img/豆瓣.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","path":"js/GithubRepoWidget.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/tagcanvas.js","path":"js/tagcanvas.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-10.jpg","path":"background/bg-10.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-9.jpg","path":"background/bg-9.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/embed.js","path":"js/embed.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/css/font-awesome.css","path":"font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/css/font-awesome.min.css","path":"font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/fonts/FontAwesome.otf","path":"font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.eot","path":"font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.woff","path":"font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.woff2","path":"font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.ttf","path":"font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.svg","path":"font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"c679f5d013bd129ad727ce7b99aa5d9ac2bd60b5","modified":1492666062000},{"_id":"themes/yelee/.gitignore","hash":"79b4a9ac435bc5833a0bc461ebacb10908b34ed3","modified":1457091592000},{"_id":"themes/yelee/README.md","hash":"099145f13a1b5bc6c05c1191d97c5f3141a0d065","modified":1457091592000},{"_id":"themes/yelee/_config.yml","hash":"7e82d864cd247e1a61f5b17d32c0ee2d28f10aa6","modified":1492670984000},{"_id":"themes/yelee/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1457091592000},{"_id":"source/404/index.md","hash":"b36a59874091db6e5e00e20b86e7ee144c3be0bc","modified":1457093806000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1467807152000},{"_id":"source/_posts/React的研究与学习.md","hash":"484499e814cff7f345ba8a515276c2b2217b0f36","modified":1472115269000},{"_id":"source/_posts/我的第一个博客.md","hash":"b60434e50491fe2ad4fb09a9c2abe799e682185b","modified":1457168160000},{"_id":"source/about/index.md","hash":"c43dbfefa04e20946cc9748f874235527138d249","modified":1466585272000},{"_id":"source/tags/index.md","hash":"d045128baa488f1b18ef7be12d343c1624295d7e","modified":1466585300000},{"_id":"themes/yelee/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1457091592000},{"_id":"themes/yelee/.git/config","hash":"6825ab1d11bf7426de601ee5eea3ad2962e28396","modified":1457091592000},{"_id":"themes/yelee/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1457091500000},{"_id":"themes/yelee/.git/index","hash":"98165af80296f4e4045c329b1fbf4dc4e61d029c","modified":1492668002000},{"_id":"themes/yelee/.git/packed-refs","hash":"70deb5c22f7897501be46fb83c6082fcdbba60ca","modified":1457091592000},{"_id":"themes/yelee/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1457091592000},{"_id":"themes/yelee/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1457091592000},{"_id":"themes/yelee/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1457091592000},{"_id":"themes/yelee/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1457091592000},{"_id":"themes/yelee/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1457091592000},{"_id":"themes/yelee/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1457091592000},{"_id":"themes/yelee/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1457091592000},{"_id":"themes/yelee/source/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1457091592000},{"_id":"themes/yelee/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1457091500000},{"_id":"themes/yelee/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1457091500000},{"_id":"themes/yelee/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1457091500000},{"_id":"themes/yelee/.git/logs/HEAD","hash":"1620b0566126af4d54a2e79a8bddfe7313c9e681","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/after-footer.ejs","hash":"cc9f1940d407c65b831e78dae838366fb46cd96b","modified":1492669141000},{"_id":"themes/yelee/layout/_partial/archive-post.ejs","hash":"0ecc2ad07b4abad80f564ac1858c50bcbdff34f8","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/article.ejs","hash":"f74f702b5c52abb75b443d39a8584a276335f79f","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/background.ejs","hash":"aeef39abef66ee0bd6c9efe856eaeb1b81416d41","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/footer.ejs","hash":"629a2ca943cf6ba49736e86d5d40a90722d7859d","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/head.ejs","hash":"d7c7fc3b60eecfabea1f08aa232b580c495df334","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/hide-labels.ejs","hash":"21ffa5e590b1588b61b7de66c81a992ff87e9b36","modified":1492669183000},{"_id":"themes/yelee/layout/_partial/left-col.ejs","hash":"3bd3b365e68fa074c6b3ae1684ce772d09eb84cd","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/mathjax.ejs","hash":"34b2d7050db88fed9f70b8233f16f451bad501f4","modified":1492669202000},{"_id":"themes/yelee/layout/_partial/mobile-nav.ejs","hash":"8e14f5a3fb03d93ee2e5dcb0c26903f365518be1","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/page.ejs","hash":"aaf96b32f1cd6045ca438d0fb08e7fdd57313328","modified":1492669124000},{"_id":"themes/yelee/layout/_partial/post-nav-button.ejs","hash":"2b4c42e467316c09af29c8c0485da736d5fdbc23","modified":1492669123000},{"_id":"themes/yelee/layout/_partial/scrolling-button.ejs","hash":"aad58483a5d6d4627fce9bbc367784d57e93c544","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/toc.ejs","hash":"d8e579e5c52b66e169feaffc355d2a2123960522","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-1.jpg","hash":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-2.jpg","hash":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-3.jpg","hash":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-4.jpg","hash":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-5.jpg","hash":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-7.jpg","hash":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-6.jpg","hash":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1457091592000},{"_id":"themes/yelee/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-8.jpg","hash":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1457091592000},{"_id":"themes/yelee/source/css/_variables.styl","hash":"0eb5069d44c1709600606d830f5060ca6cf4ddb3","modified":1457091592000},{"_id":"themes/yelee/source/css/style.styl","hash":"c7e0461510b872b124fee10020ac7ee8da3c5a67","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/jquery.fancybox.css","hash":"96138eaddfbd305160ddcb98a5f08555ca6cb4ee","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/jquery.fancybox.js","hash":"004bb0812414554ab48067792f09e978603253b6","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1457091592000},{"_id":"themes/yelee/source/img/GitHub.png","hash":"08c955a91b6733bd51913b54c69fe742d546d0ec","modified":1457091592000},{"_id":"themes/yelee/source/img/SegmentFault.png","hash":"52bd4ddf6df129b6958398b21fa370f17cadb428","modified":1457091592000},{"_id":"themes/yelee/source/img/TiddlyWiki.png","hash":"58be3c981c6d25b47ddaab2f254838f9baa01d59","modified":1457091592000},{"_id":"themes/yelee/source/img/V2EX.png","hash":"9adab6af95db9318e980c01cadbc5de800b4c816","modified":1457091592000},{"_id":"themes/yelee/source/img/avatar.png","hash":"d783f94379e2166b0305c5ec49031fcf3fd7cf64","modified":1457094078000},{"_id":"themes/yelee/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1457091592000},{"_id":"themes/yelee/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1457091592000},{"_id":"themes/yelee/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1457091592000},{"_id":"themes/yelee/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1457091592000},{"_id":"themes/yelee/source/img/favicon.png","hash":"8faad9239c20d9e714822c62de4187c78b695039","modified":1457271076000},{"_id":"themes/yelee/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1457091592000},{"_id":"themes/yelee/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1457091592000},{"_id":"themes/yelee/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1457091592000},{"_id":"themes/yelee/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1457091592000},{"_id":"themes/yelee/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1457091592000},{"_id":"themes/yelee/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1457091592000},{"_id":"themes/yelee/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1457091592000},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1457091592000},{"_id":"themes/yelee/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1457091592000},{"_id":"themes/yelee/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1457091592000},{"_id":"themes/yelee/source/img/新浪微博.png","hash":"c9fb558158f491104fd8dbafc92c30591ad0299e","modified":1457091592000},{"_id":"themes/yelee/source/img/知乎.png","hash":"50e43bad8fefb3950b13dc86aaa86de8a79432ae","modified":1457091592000},{"_id":"themes/yelee/source/img/简书.png","hash":"bfe5e7b6146de19d180f36fa5a2b074c2bc23406","modified":1457091592000},{"_id":"themes/yelee/source/img/网易云音乐.png","hash":"8bc2a2e2c4312ee9d4879b24f9e2bd51e6436840","modified":1457091592000},{"_id":"themes/yelee/source/img/虾米音乐.png","hash":"d3ff836d5d58e10fb30fac1bae0aae34cfe2038f","modified":1457091592000},{"_id":"themes/yelee/source/img/豆瓣.png","hash":"9f4798298548727052fa6ae809933c9e8ac42571","modified":1457091592000},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","hash":"5fb1bf6cf973062771ddf275ceeca5bc69c81c77","modified":1457091592000},{"_id":"themes/yelee/source/js/clipboard.min.js","hash":"fe53ec94d317bae8f12d1a5eee23040bf02680bb","modified":1457091592000},{"_id":"themes/yelee/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1457091592000},{"_id":"themes/yelee/source/js/jquery.lazyload.js","hash":"91d5acc31d0bcbdf4782166a66344e58fff28d89","modified":1457091592000},{"_id":"themes/yelee/source/js/main.js","hash":"eb561a45fcd4b9a017e83f1702829b81d76434af","modified":1457091592000},{"_id":"themes/yelee/source/js/mobile.js","hash":"230339073c37202d953b2895856551d8ccb1b19a","modified":1457091592000},{"_id":"themes/yelee/source/js/pc.js","hash":"60a76453464e823fd05e3a6c7301d921bebd6419","modified":1457091592000},{"_id":"themes/yelee/source/js/tagcanvas.js","hash":"e99e0b8195d6de3a18f863f58352e645d912886b","modified":1457163292000},{"_id":"themes/yelee/source/background/bg-10.jpg","hash":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1457091592000},{"_id":"themes/yelee/source/background/bg-9.jpg","hash":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1457091592000},{"_id":"themes/yelee/source/js/embed.js","hash":"1da69805fa752a0a1306f6b06593dd9173542384","modified":1457097388000},{"_id":"themes/yelee/.git/objects/pack/pack-4658ee3929ebf326bb0d74eb8123ece025612282.idx","hash":"da12954d1867829660d274c5b8cdbc46c8c9ba7c","modified":1457091592000},{"_id":"themes/yelee/.git/refs/heads/master","hash":"67c7e8bbcb7c9f6916356ea02b66eca89969a002","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/comments/disqus.ejs","hash":"2e5cad68bc59190b4158f4ab1879a222ca49a0d2","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/comments/duoshuo.ejs","hash":"fbd076b9828fe8080836b69f63f3036bc35e24f1","modified":1457097596000},{"_id":"themes/yelee/layout/_partial/comments/youyan.ejs","hash":"142e1bb357d738663655ddab25f75e85e20345e4","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/post/category.ejs","hash":"08c8d98bc6a73d3f72a3b0b30521ff28e1b657a7","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/post/date.ejs","hash":"a9fc6bac9e1b90c1c17c0d0ffd97f9b108072fbe","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/post/nav.ejs","hash":"e1b8d9bf1951aa621d6dffc1a4944da42571d064","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/post/share.ejs","hash":"333829ced1c2c0778b4734e3b1fe4ef04593bcc8","modified":1492669293000},{"_id":"themes/yelee/layout/_partial/post/tag.ejs","hash":"7d2693a1162bf26e4b1ae9b789e0b2a2637ddbd5","modified":1457091592000},{"_id":"themes/yelee/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/archive.styl","hash":"053c1684b6edaca7fa0c94a7f9fca637ccece2c2","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/article.styl","hash":"d56fc1df8a2d4a2582a30417f6196b7dcdb4eeea","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/footer.styl","hash":"2277125ef35f96a1ba76a1b84fc570526826453d","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/highlight.styl","hash":"48f409828549190efedb9067dae0c6828a4d22b0","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/instagram.styl","hash":"a093443add2f529396d6b6bdef1675bc3acf3958","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/main.styl","hash":"9f6fb1cefb51fa706cc271b1a1bfbbb2a2297b5e","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/mobile-slider.styl","hash":"211a4286f60751c372090fa96f384521e2ce352c","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/mobile.styl","hash":"6f2f78d5d5ba7e4e035f7ea3948b9e196b0b7136","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/page.styl","hash":"ca3f871adf8fdb296e4394070605dded53d93cb2","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/scroll.styl","hash":"f32deb9192568a2ea789d77a23a08d07f4e57d59","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/share.styl","hash":"3cfc59278c21b504f8f633e08767a449e03af8d0","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/tagcloud.styl","hash":"85540c10503e0fb250b307ca3966583ee70e63f3","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1457091592000},{"_id":"themes/yelee/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1457091592000},{"_id":"themes/yelee/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1457091592000},{"_id":"themes/yelee/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/css/font-awesome.css","hash":"6d39a08bc85169eca450978f895f85d5d3451c0a","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/css/font-awesome.min.css","hash":"624e4a106f0cf385ff4bd6a65c52cecd84f42ef9","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1457091592000},{"_id":"themes/yelee/.git/logs/refs/heads/master","hash":"1620b0566126af4d54a2e79a8bddfe7313c9e681","modified":1457091592000},{"_id":"themes/yelee/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/customise/blockquote.styl","hash":"5d14ba8efac7a0f1ffd5bc8924fcfdb7294bc918","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/customise/code-block.styl","hash":"4db1a992a06fd92b779f0afc9bb8bb3667bdb101","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/customise/color-scheme.styl","hash":"69a77b9f7b8e84df7ae1c78e76659a92739b79a9","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/customise/inline-code.styl","hash":"aedbcd697c9fbaeeb93c068be3db771c41feba0d","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/customise/social-icon.styl","hash":"2f3e9c3a08c7693ba1787db0c4af8a3fd98d696a","modified":1457091592000},{"_id":"themes/yelee/source/css/_partial/post/youyan.styl","hash":"9076b0d3c231e16b8a1d7f834e62a98d843edd32","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1457091592000},{"_id":"themes/yelee/.git/logs/refs/remotes/origin/HEAD","hash":"1620b0566126af4d54a2e79a8bddfe7313c9e681","modified":1457091592000},{"_id":"themes/yelee/source/font-awesome/fonts/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1457091592000},{"_id":"themes/yelee/.git/objects/pack/pack-4658ee3929ebf326bb0d74eb8123ece025612282.pack","hash":"1a35a7f9ca5fdfe18cdf8c3d1da10528edfec0a6","modified":1457091592000},{"_id":"themes/yelee/.DS_Store","hash":"30d4f2d0d85f4a5d6e9d2227331cd24e4e4fe065","modified":1492668747000},{"_id":"themes/yelee/layout/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1492668753000},{"_id":"public/archives/index.html","hash":"2dce08a5350b9d3fd05ba9273ec974d2e715404f","modified":1492671052743},{"_id":"public/archives/2016/index.html","hash":"36a01a94e78624da2d7dfb029a8b95cd30c99a10","modified":1492671052739},{"_id":"public/archives/2016/03/index.html","hash":"0f876196fe78dd91aca01e359872f44a6d54616f","modified":1492671052744},{"_id":"public/archives/2016/08/index.html","hash":"dda728a2a3f54c76a40cbc38e98d99cd25924080","modified":1492671052744},{"_id":"public/categories/技术学习/index.html","hash":"24b2ebff89f1d1a197de49a8e9a70970bbfb83cd","modified":1492671052744},{"_id":"public/categories/随笔/index.html","hash":"6f2ae9f867346bc029809cea091b6ddfe1ea4c1a","modified":1492671052744},{"_id":"public/tags/React-js/index.html","hash":"f18a6b24a50f92b937cdcb5b99ab78ce05550896","modified":1492671052744},{"_id":"public/tags/前端/index.html","hash":"5c416b7947a5329e0c08c863a6c199ac70febafe","modified":1492671052744},{"_id":"public/tags/虚拟DOM/index.html","hash":"3b7a84684059a1d6e20f71f157e8136fb6c5d713","modified":1492671052744},{"_id":"public/tags/组件化/index.html","hash":"4f0fd60f25fdfa0edfd6768a629328586f3d3d8f","modified":1492671052746},{"_id":"public/tags/hexo/index.html","hash":"e731b0206b626b2faab3e6a521009865fd74a3c3","modified":1492671052744},{"_id":"public/404.html","hash":"01282d4319f1a274b782acc9bdbcc08361a3e6cf","modified":1492671052744},{"_id":"public/about/index.html","hash":"63f63d0311e1151cec90247491f3d2cf55a19522","modified":1492671052744},{"_id":"public/tags/index.html","hash":"2a3852fb721478a26ed1ac055501ec036413b059","modified":1492671052744},{"_id":"public/2016/03/05/我的第一个博客/index.html","hash":"8879a8b49a91dfa0a7a9f2e0cec99ba3acbf5af0","modified":1492671052744},{"_id":"public/2016/08/25/React的研究与学习/index.html","hash":"f179dc307dff1df8ea04986426af747226a56222","modified":1492671052745},{"_id":"public/index.html","hash":"fac1005aa802e9e592c94b8903069a2d506642f2","modified":1492671052745},{"_id":"public/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1492669496190},{"_id":"public/background/bg-1.jpg","hash":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1492669496190},{"_id":"public/background/bg-2.jpg","hash":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1492669496190},{"_id":"public/background/bg-3.jpg","hash":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1492669496190},{"_id":"public/background/bg-4.jpg","hash":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1492669496190},{"_id":"public/background/bg-5.jpg","hash":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1492669496190},{"_id":"public/background/bg-7.jpg","hash":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1492669496190},{"_id":"public/background/bg-6.jpg","hash":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1492669496190},{"_id":"public/background/bg-8.jpg","hash":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1492669496190},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1492669496190},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1492669496190},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1492669496190},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1492669496190},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1492669496190},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1492669496190},{"_id":"public/img/GitHub.png","hash":"08c955a91b6733bd51913b54c69fe742d546d0ec","modified":1492669496190},{"_id":"public/img/SegmentFault.png","hash":"52bd4ddf6df129b6958398b21fa370f17cadb428","modified":1492669496190},{"_id":"public/img/TiddlyWiki.png","hash":"58be3c981c6d25b47ddaab2f254838f9baa01d59","modified":1492669496190},{"_id":"public/img/V2EX.png","hash":"9adab6af95db9318e980c01cadbc5de800b4c816","modified":1492669496190},{"_id":"public/img/avatar.png","hash":"d783f94379e2166b0305c5ec49031fcf3fd7cf64","modified":1492669496190},{"_id":"public/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1492669496190},{"_id":"public/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1492669496190},{"_id":"public/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1492669496190},{"_id":"public/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1492669496190},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1492669496190},{"_id":"public/img/favicon.png","hash":"8faad9239c20d9e714822c62de4187c78b695039","modified":1492669496191},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1492669496191},{"_id":"public/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1492669496191},{"_id":"public/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1492669496191},{"_id":"public/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1492669496191},{"_id":"public/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1492669496191},{"_id":"public/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1492669496191},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1492669496191},{"_id":"public/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1492669496191},{"_id":"public/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1492669496191},{"_id":"public/img/新浪微博.png","hash":"c9fb558158f491104fd8dbafc92c30591ad0299e","modified":1492669496191},{"_id":"public/img/知乎.png","hash":"50e43bad8fefb3950b13dc86aaa86de8a79432ae","modified":1492669496191},{"_id":"public/img/简书.png","hash":"bfe5e7b6146de19d180f36fa5a2b074c2bc23406","modified":1492669496191},{"_id":"public/img/网易云音乐.png","hash":"8bc2a2e2c4312ee9d4879b24f9e2bd51e6436840","modified":1492669496192},{"_id":"public/img/虾米音乐.png","hash":"d3ff836d5d58e10fb30fac1bae0aae34cfe2038f","modified":1492669496192},{"_id":"public/img/豆瓣.png","hash":"9f4798298548727052fa6ae809933c9e8ac42571","modified":1492669496192},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1492669496192},{"_id":"public/background/bg-10.jpg","hash":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1492669496929},{"_id":"public/background/bg-9.jpg","hash":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1492669496933},{"_id":"public/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1492669496935},{"_id":"public/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1492669496937},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1492669496938},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1492669496938},{"_id":"public/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1492669496942},{"_id":"public/js/GithubRepoWidget.js","hash":"624e81a3b0e57495b0c0e0b3e056296c6e8ae5df","modified":1492669496942},{"_id":"public/js/clipboard.min.js","hash":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b","modified":1492669496942},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1492669496942},{"_id":"public/js/jquery.lazyload.js","hash":"8e4ad3e17f8e82be311b6b6e87811762e2b2d764","modified":1492669496942},{"_id":"public/js/main.js","hash":"8c4c21a0f3706b701fa94866fbb2bbe1a520044e","modified":1492669496942},{"_id":"public/js/mobile.js","hash":"f04858f253770a65172423cda0e583782bbb1feb","modified":1492669496942},{"_id":"public/js/pc.js","hash":"ef472f8a53aba93fe09704c454b18a961acdf9e3","modified":1492669496942},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1492669496942},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1492669496942},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1492669496942},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1492669496942},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1492669496942},{"_id":"public/css/style.css","hash":"edaaa266b23e0174222e9d8381426b72c48fc0d1","modified":1492669496942},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1492669496942},{"_id":"public/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1492669496942},{"_id":"public/js/tagcanvas.js","hash":"e99e0b8195d6de3a18f863f58352e645d912886b","modified":1492669496942},{"_id":"public/js/embed.js","hash":"1da69805fa752a0a1306f6b06593dd9173542384","modified":1492669496942},{"_id":"public/font-awesome/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1492669496942},{"_id":"public/font-awesome/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1492669496943},{"_id":"public/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1492669496943},{"_id":"public/font-awesome/fonts/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1492669496953}],"Category":[{"name":"技术学习","_id":"cj1q0eiiq00041v2wxx1zrid5"},{"name":"随笔","_id":"cj1q0eiix00071v2wc2tfuxvf"}],"Data":[],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"date":"2016-03-04T12:09:39.000Z","_content":"<style type=\"text/css\">\n\t.article-header {\n\t\tpadding: 0;\n\t\tpadding-top: 26px;\n\t\tborder-left: none;\n\t\ttext-align: center;\n\t}\n\t.article-header:hover {\n\t\tborder-left: none;\n\t}\n\t.article-title {\n\t\tfont-size: 2.1em;\n\t}\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.article-meta {\n\t\tdisplay: none;\n\t}\n\t.share {\n\t\tdisplay: none;\n\t}\n\t.ds-meta {\n\t\tdisplay: none;\n\t}\n\t.player {\n\t\tmargin-left: -10px;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n\t.center {\n\t\ttext-align: center;\n\t\theight: 2.5em;\n\t\tfont-weight: bold;\n\t}\n\t.article-entry hr {\n\t\tmargin: 0;\n\t}\n\t.pic {\n\t\ttext-align: center;\n\t\tmargin: 0;\n\t}\n\t.pic br {\n  \t\tdisplay: none;\n  \t}\n\t#container .article-info-post.article-info {\n  \tdisplay: none;\n  \t}\n\t#container .article .article-title {\n\tpadding: 0;\n\t}\n</style>","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\ndate: 2016-03-04 20:09:39\n---\n<style type=\"text/css\">\n\t.article-header {\n\t\tpadding: 0;\n\t\tpadding-top: 26px;\n\t\tborder-left: none;\n\t\ttext-align: center;\n\t}\n\t.article-header:hover {\n\t\tborder-left: none;\n\t}\n\t.article-title {\n\t\tfont-size: 2.1em;\n\t}\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.article-meta {\n\t\tdisplay: none;\n\t}\n\t.share {\n\t\tdisplay: none;\n\t}\n\t.ds-meta {\n\t\tdisplay: none;\n\t}\n\t.player {\n\t\tmargin-left: -10px;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n\t.center {\n\t\ttext-align: center;\n\t\theight: 2.5em;\n\t\tfont-weight: bold;\n\t}\n\t.article-entry hr {\n\t\tmargin: 0;\n\t}\n\t.pic {\n\t\ttext-align: center;\n\t\tmargin: 0;\n\t}\n\t.pic br {\n  \t\tdisplay: none;\n  \t}\n\t#container .article-info-post.article-info {\n  \tdisplay: none;\n  \t}\n\t#container .article .article-title {\n\tpadding: 0;\n\t}\n</style>","updated":"2016-03-04T12:16:46.000Z","path":"/404.html","layout":"page","_id":"cj1q0eiif00001v2wr5aup8dr","content":"<style type=\"text/css\">\n    .article-header {\n        padding: 0;\n        padding-top: 26px;\n        border-left: none;\n        text-align: center;\n    }\n    .article-header:hover {\n        border-left: none;\n    }\n    .article-title {\n        font-size: 2.1em;\n    }\n    strong a {\n        color: #747474;\n    }\n    .article-meta {\n        display: none;\n    }\n    .share {\n        display: none;\n    }\n    .ds-meta {\n        display: none;\n    }\n    .player {\n        margin-left: -10px;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n      #page-visit {\n        display: none;\n    }\n    .center {\n        text-align: center;\n        height: 2.5em;\n        font-weight: bold;\n    }\n    .article-entry hr {\n        margin: 0;\n    }\n    .pic {\n        text-align: center;\n        margin: 0;\n    }\n    .pic br {\n          display: none;\n      }\n    #container .article-info-post.article-info {\n      display: none;\n      }\n    #container .article .article-title {\n    padding: 0;\n    }\n</style>","site":{"data":{}},"excerpt":"","more":"<style type=\"text/css\">\n    .article-header {\n        padding: 0;\n        padding-top: 26px;\n        border-left: none;\n        text-align: center;\n    }\n    .article-header:hover {\n        border-left: none;\n    }\n    .article-title {\n        font-size: 2.1em;\n    }\n    strong a {\n        color: #747474;\n    }\n    .article-meta {\n        display: none;\n    }\n    .share {\n        display: none;\n    }\n    .ds-meta {\n        display: none;\n    }\n    .player {\n        margin-left: -10px;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n      #page-visit {\n        display: none;\n    }\n    .center {\n        text-align: center;\n        height: 2.5em;\n        font-weight: bold;\n    }\n    .article-entry hr {\n        margin: 0;\n    }\n    .pic {\n        text-align: center;\n        margin: 0;\n    }\n    .pic br {\n          display: none;\n      }\n    #container .article-info-post.article-info {\n      display: none;\n      }\n    #container .article .article-title {\n    padding: 0;\n    }\n</style>"},{"title":"关于张喵喵&&留言板","date":"2016-03-04T12:07:41.000Z","_content":"### 关于张喵喵\n　　大学一不小心入了编程的坑，结果一发不可收拾（逃）。博主只是一只出入圈子的小猿猴23333。\n　　想要往架构方法发展，希望以后可以有所成就，为自己的幸福努力。o(^▽^)o\n### 兴趣爱好\n　　编程，电视剧，音乐，游戏。\n### 技能\n　　java/html/js/sql\n　　markdown\n### 日常\n#### 操作系统\n* 万恶的微软+半吊子的Linux\n\n#### 文本编辑器\n* Subline/vim\n\n#### 浏览器\n* 谷歌大法好Chrome\n\n","source":"about/index.md","raw":"---\ntitle: 关于张喵喵&&留言板\ndate: 2016-03-04 20:07:41\n---\n### 关于张喵喵\n　　大学一不小心入了编程的坑，结果一发不可收拾（逃）。博主只是一只出入圈子的小猿猴23333。\n　　想要往架构方法发展，希望以后可以有所成就，为自己的幸福努力。o(^▽^)o\n### 兴趣爱好\n　　编程，电视剧，音乐，游戏。\n### 技能\n　　java/html/js/sql\n　　markdown\n### 日常\n#### 操作系统\n* 万恶的微软+半吊子的Linux\n\n#### 文本编辑器\n* Subline/vim\n\n#### 浏览器\n* 谷歌大法好Chrome\n\n","updated":"2016-06-22T08:47:52.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj1q0eiim00021v2wj8oc77d5","content":"<h3 id=\"关于张喵喵\"><a href=\"#关于张喵喵\" class=\"headerlink\" title=\"关于张喵喵\"></a>关于张喵喵</h3><p>　　大学一不小心入了编程的坑，结果一发不可收拾（逃）。博主只是一只出入圈子的小猿猴23333。<br>　　想要往架构方法发展，希望以后可以有所成就，为自己的幸福努力。o(^▽^)o</p>\n<h3 id=\"兴趣爱好\"><a href=\"#兴趣爱好\" class=\"headerlink\" title=\"兴趣爱好\"></a>兴趣爱好</h3><p>　　编程，电视剧，音乐，游戏。</p>\n<h3 id=\"技能\"><a href=\"#技能\" class=\"headerlink\" title=\"技能\"></a>技能</h3><p>　　java/html/js/sql<br>　　markdown</p>\n<h3 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h3><h4 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h4><ul>\n<li>万恶的微软+半吊子的Linux</li>\n</ul>\n<h4 id=\"文本编辑器\"><a href=\"#文本编辑器\" class=\"headerlink\" title=\"文本编辑器\"></a>文本编辑器</h4><ul>\n<li>Subline/vim</li>\n</ul>\n<h4 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h4><ul>\n<li>谷歌大法好Chrome</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"关于张喵喵\"><a href=\"#关于张喵喵\" class=\"headerlink\" title=\"关于张喵喵\"></a>关于张喵喵</h3><p>　　大学一不小心入了编程的坑，结果一发不可收拾（逃）。博主只是一只出入圈子的小猿猴23333。<br>　　想要往架构方法发展，希望以后可以有所成就，为自己的幸福努力。o(^▽^)o</p>\n<h3 id=\"兴趣爱好\"><a href=\"#兴趣爱好\" class=\"headerlink\" title=\"兴趣爱好\"></a>兴趣爱好</h3><p>　　编程，电视剧，音乐，游戏。</p>\n<h3 id=\"技能\"><a href=\"#技能\" class=\"headerlink\" title=\"技能\"></a>技能</h3><p>　　java/html/js/sql<br>　　markdown</p>\n<h3 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h3><h4 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h4><ul>\n<li>万恶的微软+半吊子的Linux</li>\n</ul>\n<h4 id=\"文本编辑器\"><a href=\"#文本编辑器\" class=\"headerlink\" title=\"文本编辑器\"></a>文本编辑器</h4><ul>\n<li>Subline/vim</li>\n</ul>\n<h4 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h4><ul>\n<li>谷歌大法好Chrome</li>\n</ul>\n"},{"title":"张喵喵的标签云","date":"2016-03-05T07:41:13.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 张喵喵的标签云\ndate: 2016-03-05 15:41:13\n---\n","updated":"2016-06-22T08:48:20.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj1q0eiiw00061v2wvy1xalt9","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"React的研究与学习","date":"2016-08-25T08:41:36.000Z","_content":"## React简介\n### 前言\n　　最近开始学习React，做点笔记给自己留下点印象。React使用组件化的思想进行设计，可以通过多个小组件的组合来完成一个独立模块的功能。使用虚拟DOM的概念，React在内存数据中操作组件的内容，并通过React diff算法更新改变了的DOM节点，由于React使用的虚拟DOM是内存数据，所以具有较高的性能。\n### 组件化\n　　![](http://i.imgur.com/MtVxuIA.png)\n　　1. React的组件有如下几点特性：\n　　2. 可组合性：组件之间可以嵌套使用。\n　　2. 可重用性：每个组件可具有独立的功能，可以在多个UI场景中进行使用。\n　　3. 可维护性：每个组件仅含有自身的逻辑，可以方便得进行维护。\n### JSX语法\n　　JSX允许HTML语言可以脱离引号直接出现在Javascript语言中。具体的代码如下：\n``` html\n<!DOCTYPE html>\n<html>\n  <head>\n  \t<meta charset=\"utf-8\" />\n\t<!-- 引入需要的库文件3个 -->\n\t<script type=\"text/javascript\" src=\"js/react.js\" ></script>\n\t<script type=\"text/javascript\" src=\"js/react-dom.js\" ></script>\n\t<script type=\"text/javascript\" src=\"js/browser.min.js\" ></script>\n\t<title>React Demo</title>\n  </head>\n  <body>\n\t<div id=\"demo\"></div>\n\t<script type=\"text/babel\">\n\t\tvar Helloworld = React.createClass({\n\t\t\trender:function(){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Hello World!</h1>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\t\t\n\t\tReact.render(\n\t\t\t<Helloworld />,\n\t\t\tdocument.getElementById('demo')\n\t\t);\n\t</script>\t\n  </body>\n</html>\n```\n\n## React.js组件学习\n### 组件属性\n　　React允许我们对普通的HTML代码进行包装，行程一个新的组件，组件可以具有一定的属性，在网页上可以和插入HTML标签一样在页面中插入组件。在React中通过React.creatClass方法来创建一个新的组件。以下是一个运用组件属性的例子：\n``` javascript\nvar Comment = React.createClass({\n\trender: function(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>\n\t\t\t\t\t{this.props.author}\n\t\t\t\t</h2>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\nReactDOM.render(\n  <Comment author='akinoneko'>这是一个Comment</Comment>,\n  document.getElementById('demo')\n);\n```\n　　通过props，可以获取组件的属性值，使用方式是通过**this.props.属性名**来取得对应属性的值。\n　　在创建组件时需要注意以下几点：\n　　1. 组件的名称必须**首字母大写**；\n　　2. 组件中的元素需要添加CSS时，**使用clssName不能使用class**，因为class是js中的关键字；\n　　3. 组件中的元素不能直接使用style设置inline CSS的属性，\t需要使用**style={ {属性名:属性值} }**这种方式；\n### 组件状态\n　　React中的组件都有自己的状态，当与用户进行交互的时候，组件的状态发生了改变，React会捕捉到组件的变化，并且与DOM进行对比，使用修改最少UI资源的方式更新UI界面。以下是一个示例的代码：\n``` javascript\nvar Text = React.createClass({\n\tgetInitialState:function(){\n\t\treturn {textvalue:\"\"};\n\t},\n\thandleChange:function(e){\n\t\tthis.setState({textvalue:e.target.value});\n\t},\n\trender: function(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>文本输入</h2>\n\t\t\t\t<input type=\"text\" onChange={this.handleChange} />\n\t\t\t\t<h3>{this.state.textvalue}</h3>\n\t\t\t</div>\n\t\t);\n\t}\n});\nReactDOM.render(\n  <Text author='Yoo酱'/>,\n  document.getElementById('demo')\n);\n```\n　　在上述的代码中，我们使用了一个getInitialState方法，该方法在组件初始化的时候会被执行，且必须返回一个NULL或者一个对象。另外我们通过将handleChange事件与输入框绑定来调用setState方法修改this.state.textvalue的值，每次改完后，会自动调用this.render方法，重新渲染组件。\n### 组件生命周期\n　　组件的生命周期分为三个阶段Mounting、Updating和Unmounting，React 为每个状态都提供了两种处理函数，will 函数在进入状态之前调用，did 函数在进入状态之后调用，三种状态共计五种处理函数。\n* componentWillMount()\n* componentDidMount()\n* componentWillUpdate(object nextProps, object nextState)\n* componentDidUpdate(object prevProps, object prevState)\n* componentWillUnmount()\n\n### 组件嵌套\n　　React的组件可以进行复用，多个组件可以进行嵌套行程一个独立的模块。\n![TODO-APP](http://i.imgur.com/aGHClm2.jpg)\n　　这是一个利用组件嵌套制作的TODO-APP，代码如下：\n``` javascript\n//List列表\nvar TodoList = React.createClass({\n\thandleClick: function(){\n\t\tconsole.log(\"son click\");\n\t},\n\trender: function(){\n\t\tvar createItem = function(nextItem){\n\t\t\t\treturn (\n\t\t\t\t\t<li>{nextItem}</li>\n\t\t\t\t)\n\t\t\t}\n\t\t//遍历输出列表数组中的值\n\t\treturn (\n\t\t\t<ul>{this.props.items.map(createItem)}</ul>\n\t\t);\n\t}\n});\n//Todo组件\nvar TodoApp = React.createClass({\n\tgetInitialState: function(){\n\t\treturn {items: [],text: ''};\n\t},\n\thandleSubmit:function(event){\n\t\t//阻止表单提交\n\t\tevent.preventDefault();\n\t\tvar nextText = this.state.text;\n\t\t//防止空数据提交\n\t\tif(nextText==''){\n\t\t\treturn ;\n\t\t}\n\t\t//添加内容到列表数组中\n\t\tvar nextItems = this.state.items.concat([nextText]);\n\t\tnextText = '';\n\t\tthis.setState({items:nextItems,text:nextText});\n\t},\n\thandleOnChange:function(event){\n\t\tthis.setState({text: event.target.value});\n\t},\n\trender: function(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 style={{color:'red'}}>待办事项</h2>\n\t\t\t\t<TodoList items={this.state.items} />\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<input type=\"text\" value={this.state.text} onChange={this.handleOnChange} />\n\t\t\t\t\t<button>{'添加事项' + (this.state.items.length+1)}</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n});\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('demo')\n);\n```\n\n","source":"_posts/React的研究与学习.md","raw":"---\ntitle: React的研究与学习\ndate: 2016-08-25 16:41:36\ncategories:\n  - 技术学习\ntags:\n  - React.js\n  - 前端\n  - 虚拟DOM\n  - 组件化\n---\n## React简介\n### 前言\n　　最近开始学习React，做点笔记给自己留下点印象。React使用组件化的思想进行设计，可以通过多个小组件的组合来完成一个独立模块的功能。使用虚拟DOM的概念，React在内存数据中操作组件的内容，并通过React diff算法更新改变了的DOM节点，由于React使用的虚拟DOM是内存数据，所以具有较高的性能。\n### 组件化\n　　![](http://i.imgur.com/MtVxuIA.png)\n　　1. React的组件有如下几点特性：\n　　2. 可组合性：组件之间可以嵌套使用。\n　　2. 可重用性：每个组件可具有独立的功能，可以在多个UI场景中进行使用。\n　　3. 可维护性：每个组件仅含有自身的逻辑，可以方便得进行维护。\n### JSX语法\n　　JSX允许HTML语言可以脱离引号直接出现在Javascript语言中。具体的代码如下：\n``` html\n<!DOCTYPE html>\n<html>\n  <head>\n  \t<meta charset=\"utf-8\" />\n\t<!-- 引入需要的库文件3个 -->\n\t<script type=\"text/javascript\" src=\"js/react.js\" ></script>\n\t<script type=\"text/javascript\" src=\"js/react-dom.js\" ></script>\n\t<script type=\"text/javascript\" src=\"js/browser.min.js\" ></script>\n\t<title>React Demo</title>\n  </head>\n  <body>\n\t<div id=\"demo\"></div>\n\t<script type=\"text/babel\">\n\t\tvar Helloworld = React.createClass({\n\t\t\trender:function(){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Hello World!</h1>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\t\t\n\t\tReact.render(\n\t\t\t<Helloworld />,\n\t\t\tdocument.getElementById('demo')\n\t\t);\n\t</script>\t\n  </body>\n</html>\n```\n\n## React.js组件学习\n### 组件属性\n　　React允许我们对普通的HTML代码进行包装，行程一个新的组件，组件可以具有一定的属性，在网页上可以和插入HTML标签一样在页面中插入组件。在React中通过React.creatClass方法来创建一个新的组件。以下是一个运用组件属性的例子：\n``` javascript\nvar Comment = React.createClass({\n\trender: function(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>\n\t\t\t\t\t{this.props.author}\n\t\t\t\t</h2>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\nReactDOM.render(\n  <Comment author='akinoneko'>这是一个Comment</Comment>,\n  document.getElementById('demo')\n);\n```\n　　通过props，可以获取组件的属性值，使用方式是通过**this.props.属性名**来取得对应属性的值。\n　　在创建组件时需要注意以下几点：\n　　1. 组件的名称必须**首字母大写**；\n　　2. 组件中的元素需要添加CSS时，**使用clssName不能使用class**，因为class是js中的关键字；\n　　3. 组件中的元素不能直接使用style设置inline CSS的属性，\t需要使用**style={ {属性名:属性值} }**这种方式；\n### 组件状态\n　　React中的组件都有自己的状态，当与用户进行交互的时候，组件的状态发生了改变，React会捕捉到组件的变化，并且与DOM进行对比，使用修改最少UI资源的方式更新UI界面。以下是一个示例的代码：\n``` javascript\nvar Text = React.createClass({\n\tgetInitialState:function(){\n\t\treturn {textvalue:\"\"};\n\t},\n\thandleChange:function(e){\n\t\tthis.setState({textvalue:e.target.value});\n\t},\n\trender: function(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>文本输入</h2>\n\t\t\t\t<input type=\"text\" onChange={this.handleChange} />\n\t\t\t\t<h3>{this.state.textvalue}</h3>\n\t\t\t</div>\n\t\t);\n\t}\n});\nReactDOM.render(\n  <Text author='Yoo酱'/>,\n  document.getElementById('demo')\n);\n```\n　　在上述的代码中，我们使用了一个getInitialState方法，该方法在组件初始化的时候会被执行，且必须返回一个NULL或者一个对象。另外我们通过将handleChange事件与输入框绑定来调用setState方法修改this.state.textvalue的值，每次改完后，会自动调用this.render方法，重新渲染组件。\n### 组件生命周期\n　　组件的生命周期分为三个阶段Mounting、Updating和Unmounting，React 为每个状态都提供了两种处理函数，will 函数在进入状态之前调用，did 函数在进入状态之后调用，三种状态共计五种处理函数。\n* componentWillMount()\n* componentDidMount()\n* componentWillUpdate(object nextProps, object nextState)\n* componentDidUpdate(object prevProps, object prevState)\n* componentWillUnmount()\n\n### 组件嵌套\n　　React的组件可以进行复用，多个组件可以进行嵌套行程一个独立的模块。\n![TODO-APP](http://i.imgur.com/aGHClm2.jpg)\n　　这是一个利用组件嵌套制作的TODO-APP，代码如下：\n``` javascript\n//List列表\nvar TodoList = React.createClass({\n\thandleClick: function(){\n\t\tconsole.log(\"son click\");\n\t},\n\trender: function(){\n\t\tvar createItem = function(nextItem){\n\t\t\t\treturn (\n\t\t\t\t\t<li>{nextItem}</li>\n\t\t\t\t)\n\t\t\t}\n\t\t//遍历输出列表数组中的值\n\t\treturn (\n\t\t\t<ul>{this.props.items.map(createItem)}</ul>\n\t\t);\n\t}\n});\n//Todo组件\nvar TodoApp = React.createClass({\n\tgetInitialState: function(){\n\t\treturn {items: [],text: ''};\n\t},\n\thandleSubmit:function(event){\n\t\t//阻止表单提交\n\t\tevent.preventDefault();\n\t\tvar nextText = this.state.text;\n\t\t//防止空数据提交\n\t\tif(nextText==''){\n\t\t\treturn ;\n\t\t}\n\t\t//添加内容到列表数组中\n\t\tvar nextItems = this.state.items.concat([nextText]);\n\t\tnextText = '';\n\t\tthis.setState({items:nextItems,text:nextText});\n\t},\n\thandleOnChange:function(event){\n\t\tthis.setState({text: event.target.value});\n\t},\n\trender: function(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 style={{color:'red'}}>待办事项</h2>\n\t\t\t\t<TodoList items={this.state.items} />\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<input type=\"text\" value={this.state.text} onChange={this.handleOnChange} />\n\t\t\t\t\t<button>{'添加事项' + (this.state.items.length+1)}</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n});\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('demo')\n);\n```\n\n","slug":"React的研究与学习","published":1,"updated":"2016-08-25T08:54:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1q0eiih00011v2whv45bptq","content":"<h2 id=\"React简介\"><a href=\"#React简介\" class=\"headerlink\" title=\"React简介\"></a>React简介</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>　　最近开始学习React，做点笔记给自己留下点印象。React使用组件化的思想进行设计，可以通过多个小组件的组合来完成一个独立模块的功能。使用虚拟DOM的概念，React在内存数据中操作组件的内容，并通过React diff算法更新改变了的DOM节点，由于React使用的虚拟DOM是内存数据，所以具有较高的性能。</p>\n<h3 id=\"组件化\"><a href=\"#组件化\" class=\"headerlink\" title=\"组件化\"></a>组件化</h3><p>　　<img src=\"http://i.imgur.com/MtVxuIA.png\" alt=\"\"><br>　　1. React的组件有如下几点特性：<br>　　2. 可组合性：组件之间可以嵌套使用。<br>　　2. 可重用性：每个组件可具有独立的功能，可以在多个UI场景中进行使用。<br>　　3. 可维护性：每个组件仅含有自身的逻辑，可以方便得进行维护。</p>\n<h3 id=\"JSX语法\"><a href=\"#JSX语法\" class=\"headerlink\" title=\"JSX语法\"></a>JSX语法</h3><p>　　JSX允许HTML语言可以脱离引号直接出现在Javascript语言中。具体的代码如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 引入需要的库文件3个 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/react.js\"</span> &gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/react-dom.js\"</span> &gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/browser.min.js\"</span> &gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>React Demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"demo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/babel\"</span>&gt;</span><span class=\"xml\"></span></div><div class=\"line\">\t\tvar Helloworld = React.createClass(&#123;</div><div class=\"line\">\t\t\trender:function()&#123;</div><div class=\"line\">\t\t\t\treturn(</div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t\t\t\t);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);\t\t</div><div class=\"line\">\t\tReact.render(</div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Helloworld</span> /&gt;</span>,</div><div class=\"line\">\t\t\tdocument.getElementById('demo')</div><div class=\"line\">\t\t);</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\t</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"React-js组件学习\"><a href=\"#React-js组件学习\" class=\"headerlink\" title=\"React.js组件学习\"></a>React.js组件学习</h2><h3 id=\"组件属性\"><a href=\"#组件属性\" class=\"headerlink\" title=\"组件属性\"></a>组件属性</h3><p>　　React允许我们对普通的HTML代码进行包装，行程一个新的组件，组件可以具有一定的属性，在网页上可以和插入HTML标签一样在页面中插入组件。在React中通过React.creatClass方法来创建一个新的组件。以下是一个运用组件属性的例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Comment = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t&#123;this.props.author&#125;</div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">\t\t\t\t&#123;this.props.children&#125;</div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Comment</span> <span class=\"attr\">author</span>=<span class=\"string\">'akinoneko'</span>&gt;</span>这是一个Comment<span class=\"tag\">&lt;/<span class=\"name\">Comment</span>&gt;</span></span>,</div><div class=\"line\">  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'demo'</span>)</div><div class=\"line\">);</div></pre></td></tr></table></figure></p>\n<p>　　通过props，可以获取组件的属性值，使用方式是通过<strong>this.props.属性名</strong>来取得对应属性的值。<br>　　在创建组件时需要注意以下几点：<br>　　1. 组件的名称必须<strong>首字母大写</strong>；<br>　　2. 组件中的元素需要添加CSS时，<strong>使用clssName不能使用class</strong>，因为class是js中的关键字；<br>　　3. 组件中的元素不能直接使用style设置inline CSS的属性，    需要使用<strong>style={ {属性名:属性值} }</strong>这种方式；</p>\n<h3 id=\"组件状态\"><a href=\"#组件状态\" class=\"headerlink\" title=\"组件状态\"></a>组件状态</h3><p>　　React中的组件都有自己的状态，当与用户进行交互的时候，组件的状态发生了改变，React会捕捉到组件的变化，并且与DOM进行对比，使用修改最少UI资源的方式更新UI界面。以下是一个示例的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Text = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">getInitialState</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> &#123;<span class=\"attr\">textvalue</span>:<span class=\"string\">\"\"</span>&#125;;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">handleChange</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">textvalue</span>:e.target.value&#125;);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t&lt;div&gt;</div><div class=\"line\">\t\t\t\t&lt;h2&gt;文本输入&lt;/h2&gt;</div><div class=\"line\">\t\t\t\t&lt;input type=\"text\" onChange=&#123;this.handleChange&#125; /&gt;</div><div class=\"line\">\t\t\t\t&lt;h3&gt;&#123;this.state.textvalue&#125;&lt;/h3&gt;</div><div class=\"line\">\t\t\t&lt;/div&gt;</div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;Text author='Yoo酱'/&gt;,</div><div class=\"line\">  document.getElementById('demo')</div><div class=\"line\">);</div></pre></td></tr></table></figure></p>\n<p>　　在上述的代码中，我们使用了一个getInitialState方法，该方法在组件初始化的时候会被执行，且必须返回一个NULL或者一个对象。另外我们通过将handleChange事件与输入框绑定来调用setState方法修改this.state.textvalue的值，每次改完后，会自动调用this.render方法，重新渲染组件。</p>\n<h3 id=\"组件生命周期\"><a href=\"#组件生命周期\" class=\"headerlink\" title=\"组件生命周期\"></a>组件生命周期</h3><p>　　组件的生命周期分为三个阶段Mounting、Updating和Unmounting，React 为每个状态都提供了两种处理函数，will 函数在进入状态之前调用，did 函数在进入状态之后调用，三种状态共计五种处理函数。</p>\n<ul>\n<li>componentWillMount()</li>\n<li>componentDidMount()</li>\n<li>componentWillUpdate(object nextProps, object nextState)</li>\n<li>componentDidUpdate(object prevProps, object prevState)</li>\n<li>componentWillUnmount()</li>\n</ul>\n<h3 id=\"组件嵌套\"><a href=\"#组件嵌套\" class=\"headerlink\" title=\"组件嵌套\"></a>组件嵌套</h3><p>　　React的组件可以进行复用，多个组件可以进行嵌套行程一个独立的模块。<br><img src=\"http://i.imgur.com/aGHClm2.jpg\" alt=\"TODO-APP\"><br>　　这是一个利用组件嵌套制作的TODO-APP，代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//List列表</span></div><div class=\"line\"><span class=\"keyword\">var</span> TodoList = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">handleClick</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"son click\"</span>);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> createItem = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nextItem</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t\t\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;nextItem&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></div><div class=\"line\">\t\t\t\t)</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//遍历输出列表数组中的值</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>&#123;this.props.items.map(createItem)&#125;<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">//Todo组件</span></div><div class=\"line\"><span class=\"keyword\">var</span> TodoApp = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">getInitialState</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> &#123;<span class=\"attr\">items</span>: [],<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">handleSubmit</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//阻止表单提交</span></div><div class=\"line\">\t\tevent.preventDefault();</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> nextText = <span class=\"keyword\">this</span>.state.text;</div><div class=\"line\">\t\t<span class=\"comment\">//防止空数据提交</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(nextText==<span class=\"string\">''</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//添加内容到列表数组中</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> nextItems = <span class=\"keyword\">this</span>.state.items.concat([nextText]);</div><div class=\"line\">\t\tnextText = <span class=\"string\">''</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">items</span>:nextItems,<span class=\"attr\">text</span>:nextText&#125;);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">handleOnChange</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">text</span>: event.target.value&#125;);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t&lt;div&gt;</div><div class=\"line\">\t\t\t\t&lt;h2 style=&#123;&#123;color:'red'&#125;&#125;&gt;待办事项&lt;/h2&gt;</div><div class=\"line\">\t\t\t\t&lt;TodoList items=&#123;this.state.items&#125; /&gt;</div><div class=\"line\">\t\t\t\t&lt;form onSubmit=&#123;this.handleSubmit&#125;&gt;</div><div class=\"line\">\t\t\t\t\t&lt;input type=\"text\" value=&#123;this.state.text&#125; onChange=&#123;this.handleOnChange&#125; /&gt;</div><div class=\"line\">\t\t\t\t\t&lt;button&gt;&#123;'添加事项' + (this.state.items.length+1)&#125;&lt;/button&gt;</div><div class=\"line\">\t\t\t\t&lt;/form&gt;</div><div class=\"line\">\t\t\t&lt;/div&gt;</div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;TodoApp /&gt;,</div><div class=\"line\">  document.getElementById('demo')</div><div class=\"line\">);</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"React简介\"><a href=\"#React简介\" class=\"headerlink\" title=\"React简介\"></a>React简介</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>　　最近开始学习React，做点笔记给自己留下点印象。React使用组件化的思想进行设计，可以通过多个小组件的组合来完成一个独立模块的功能。使用虚拟DOM的概念，React在内存数据中操作组件的内容，并通过React diff算法更新改变了的DOM节点，由于React使用的虚拟DOM是内存数据，所以具有较高的性能。</p>\n<h3 id=\"组件化\"><a href=\"#组件化\" class=\"headerlink\" title=\"组件化\"></a>组件化</h3><p>　　<img src=\"http://i.imgur.com/MtVxuIA.png\" alt=\"\"><br>　　1. React的组件有如下几点特性：<br>　　2. 可组合性：组件之间可以嵌套使用。<br>　　2. 可重用性：每个组件可具有独立的功能，可以在多个UI场景中进行使用。<br>　　3. 可维护性：每个组件仅含有自身的逻辑，可以方便得进行维护。</p>\n<h3 id=\"JSX语法\"><a href=\"#JSX语法\" class=\"headerlink\" title=\"JSX语法\"></a>JSX语法</h3><p>　　JSX允许HTML语言可以脱离引号直接出现在Javascript语言中。具体的代码如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 引入需要的库文件3个 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/react.js\"</span> &gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/react-dom.js\"</span> &gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/browser.min.js\"</span> &gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>React Demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"demo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/babel\"</span>&gt;</span><span class=\"xml\"></div><div class=\"line\">\t\tvar Helloworld = React.createClass(&#123;</div><div class=\"line\">\t\t\trender:function()&#123;</div><div class=\"line\">\t\t\t\treturn(</div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t\t\t\t);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);\t\t</div><div class=\"line\">\t\tReact.render(</div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Helloworld</span> /&gt;</span>,</div><div class=\"line\">\t\t\tdocument.getElementById('demo')</div><div class=\"line\">\t\t);</div><div class=\"line\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\t</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"React-js组件学习\"><a href=\"#React-js组件学习\" class=\"headerlink\" title=\"React.js组件学习\"></a>React.js组件学习</h2><h3 id=\"组件属性\"><a href=\"#组件属性\" class=\"headerlink\" title=\"组件属性\"></a>组件属性</h3><p>　　React允许我们对普通的HTML代码进行包装，行程一个新的组件，组件可以具有一定的属性，在网页上可以和插入HTML标签一样在页面中插入组件。在React中通过React.creatClass方法来创建一个新的组件。以下是一个运用组件属性的例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Comment = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t&#123;this.props.author&#125;</div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">\t\t\t\t&#123;this.props.children&#125;</div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Comment</span> <span class=\"attr\">author</span>=<span class=\"string\">'akinoneko'</span>&gt;</span>这是一个Comment<span class=\"tag\">&lt;/<span class=\"name\">Comment</span>&gt;</span></span>,</div><div class=\"line\">  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'demo'</span>)</div><div class=\"line\">);</div></pre></td></tr></table></figure></p>\n<p>　　通过props，可以获取组件的属性值，使用方式是通过<strong>this.props.属性名</strong>来取得对应属性的值。<br>　　在创建组件时需要注意以下几点：<br>　　1. 组件的名称必须<strong>首字母大写</strong>；<br>　　2. 组件中的元素需要添加CSS时，<strong>使用clssName不能使用class</strong>，因为class是js中的关键字；<br>　　3. 组件中的元素不能直接使用style设置inline CSS的属性，    需要使用<strong>style={ {属性名:属性值} }</strong>这种方式；</p>\n<h3 id=\"组件状态\"><a href=\"#组件状态\" class=\"headerlink\" title=\"组件状态\"></a>组件状态</h3><p>　　React中的组件都有自己的状态，当与用户进行交互的时候，组件的状态发生了改变，React会捕捉到组件的变化，并且与DOM进行对比，使用修改最少UI资源的方式更新UI界面。以下是一个示例的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Text = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">getInitialState</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> &#123;<span class=\"attr\">textvalue</span>:<span class=\"string\">\"\"</span>&#125;;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">handleChange</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">textvalue</span>:e.target.value&#125;);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t&lt;div&gt;</div><div class=\"line\">\t\t\t\t&lt;h2&gt;文本输入&lt;/h2&gt;</div><div class=\"line\">\t\t\t\t&lt;input type=\"text\" onChange=&#123;this.handleChange&#125; /&gt;</div><div class=\"line\">\t\t\t\t&lt;h3&gt;&#123;this.state.textvalue&#125;&lt;/h3&gt;</div><div class=\"line\">\t\t\t&lt;/div&gt;</div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;Text author='Yoo酱'/&gt;,</div><div class=\"line\">  document.getElementById('demo')</div><div class=\"line\">);</div></pre></td></tr></table></figure></p>\n<p>　　在上述的代码中，我们使用了一个getInitialState方法，该方法在组件初始化的时候会被执行，且必须返回一个NULL或者一个对象。另外我们通过将handleChange事件与输入框绑定来调用setState方法修改this.state.textvalue的值，每次改完后，会自动调用this.render方法，重新渲染组件。</p>\n<h3 id=\"组件生命周期\"><a href=\"#组件生命周期\" class=\"headerlink\" title=\"组件生命周期\"></a>组件生命周期</h3><p>　　组件的生命周期分为三个阶段Mounting、Updating和Unmounting，React 为每个状态都提供了两种处理函数，will 函数在进入状态之前调用，did 函数在进入状态之后调用，三种状态共计五种处理函数。</p>\n<ul>\n<li>componentWillMount()</li>\n<li>componentDidMount()</li>\n<li>componentWillUpdate(object nextProps, object nextState)</li>\n<li>componentDidUpdate(object prevProps, object prevState)</li>\n<li>componentWillUnmount()</li>\n</ul>\n<h3 id=\"组件嵌套\"><a href=\"#组件嵌套\" class=\"headerlink\" title=\"组件嵌套\"></a>组件嵌套</h3><p>　　React的组件可以进行复用，多个组件可以进行嵌套行程一个独立的模块。<br><img src=\"http://i.imgur.com/aGHClm2.jpg\" alt=\"TODO-APP\"><br>　　这是一个利用组件嵌套制作的TODO-APP，代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//List列表</span></div><div class=\"line\"><span class=\"keyword\">var</span> TodoList = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">handleClick</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"son click\"</span>);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> createItem = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nextItem</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t\t\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;nextItem&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></div><div class=\"line\">\t\t\t\t)</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//遍历输出列表数组中的值</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>&#123;this.props.items.map(createItem)&#125;<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">//Todo组件</span></div><div class=\"line\"><span class=\"keyword\">var</span> TodoApp = React.createClass(&#123;</div><div class=\"line\">\t<span class=\"attr\">getInitialState</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> &#123;<span class=\"attr\">items</span>: [],<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">handleSubmit</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//阻止表单提交</span></div><div class=\"line\">\t\tevent.preventDefault();</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> nextText = <span class=\"keyword\">this</span>.state.text;</div><div class=\"line\">\t\t<span class=\"comment\">//防止空数据提交</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(nextText==<span class=\"string\">''</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//添加内容到列表数组中</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> nextItems = <span class=\"keyword\">this</span>.state.items.concat([nextText]);</div><div class=\"line\">\t\tnextText = <span class=\"string\">''</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">items</span>:nextItems,<span class=\"attr\">text</span>:nextText&#125;);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">handleOnChange</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">text</span>: event.target.value&#125;);</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">render</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (</div><div class=\"line\">\t\t\t&lt;div&gt;</div><div class=\"line\">\t\t\t\t&lt;h2 style=&#123;&#123;color:'red'&#125;&#125;&gt;待办事项&lt;/h2&gt;</div><div class=\"line\">\t\t\t\t&lt;TodoList items=&#123;this.state.items&#125; /&gt;</div><div class=\"line\">\t\t\t\t&lt;form onSubmit=&#123;this.handleSubmit&#125;&gt;</div><div class=\"line\">\t\t\t\t\t&lt;input type=\"text\" value=&#123;this.state.text&#125; onChange=&#123;this.handleOnChange&#125; /&gt;</div><div class=\"line\">\t\t\t\t\t&lt;button&gt;&#123;'添加事项' + (this.state.items.length+1)&#125;&lt;/button&gt;</div><div class=\"line\">\t\t\t\t&lt;/form&gt;</div><div class=\"line\">\t\t\t&lt;/div&gt;</div><div class=\"line\">\t\t);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;TodoApp /&gt;,</div><div class=\"line\">  document.getElementById('demo')</div><div class=\"line\">);</div></pre></td></tr></table></figure></p>\n"},{"title":"我的第一个博客","_content":"好不容易搭建好了[Hexo](https://hexo.io/)的静态博客!先留下点文字，也算是给今天这个日子留下点纪念.\n\n## Hexo快速入门\n\n### 创建一篇新文章 \n\n``` bash\n$ hexo new \"文章的标题\"\n```\n\n更多信息： [Writing](https://hexo.io/docs/writing.html)\n\n### 进行本地预览 \n\n``` bash\n$ hexo server\n#也可以使用更简单的命令来完成这件事\n$ hexo s\n```\n\n更多信息： [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件 \n\n``` bash\n$ hexo generate  \n# 简要命令\n$ hexo g\n```\n\n更多信息： [Generating](https://hexo.io/docs/generating.html)\n\n### 部署文件到git仓库中 \n\n``` bash\n$ hexo deploy\n#使用命令组合可以在生成静态文件的同时将文件更新到git上\n$ hexo deploy -g\n```\n\n更多信息： [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/我的第一个博客.md","raw":"---\ntitle: 我的第一个博客\ncategories:\n  - 随笔\ntag: \n  - hexo\n---\n好不容易搭建好了[Hexo](https://hexo.io/)的静态博客!先留下点文字，也算是给今天这个日子留下点纪念.\n\n## Hexo快速入门\n\n### 创建一篇新文章 \n\n``` bash\n$ hexo new \"文章的标题\"\n```\n\n更多信息： [Writing](https://hexo.io/docs/writing.html)\n\n### 进行本地预览 \n\n``` bash\n$ hexo server\n#也可以使用更简单的命令来完成这件事\n$ hexo s\n```\n\n更多信息： [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件 \n\n``` bash\n$ hexo generate  \n# 简要命令\n$ hexo g\n```\n\n更多信息： [Generating](https://hexo.io/docs/generating.html)\n\n### 部署文件到git仓库中 \n\n``` bash\n$ hexo deploy\n#使用命令组合可以在生成静态文件的同时将文件更新到git上\n$ hexo deploy -g\n```\n\n更多信息： [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"我的第一个博客","published":1,"date":"2016-03-05T08:56:00.000Z","updated":"2016-03-05T08:56:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1q0eiin00031v2w9hl9cllq","content":"<p>好不容易搭建好了<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>的静态博客!先留下点文字，也算是给今天这个日子留下点纪念.</p>\n<h2 id=\"Hexo快速入门\"><a href=\"#Hexo快速入门\" class=\"headerlink\" title=\"Hexo快速入门\"></a>Hexo快速入门</h2><h3 id=\"创建一篇新文章\"><a href=\"#创建一篇新文章\" class=\"headerlink\" title=\"创建一篇新文章\"></a>创建一篇新文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"文章的标题\"</span></div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"进行本地预览\"><a href=\"#进行本地预览\" class=\"headerlink\" title=\"进行本地预览\"></a>进行本地预览</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div><div class=\"line\"><span class=\"comment\">#也可以使用更简单的命令来完成这件事</span></div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate  </div><div class=\"line\"><span class=\"comment\"># 简要命令</span></div><div class=\"line\">$ hexo g</div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"部署文件到git仓库中\"><a href=\"#部署文件到git仓库中\" class=\"headerlink\" title=\"部署文件到git仓库中\"></a>部署文件到git仓库中</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div><div class=\"line\"><span class=\"comment\">#使用命令组合可以在生成静态文件的同时将文件更新到git上</span></div><div class=\"line\">$ hexo deploy -g</div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>好不容易搭建好了<a href=\"https://hexo.io/\">Hexo</a>的静态博客!先留下点文字，也算是给今天这个日子留下点纪念.</p>\n<h2 id=\"Hexo快速入门\"><a href=\"#Hexo快速入门\" class=\"headerlink\" title=\"Hexo快速入门\"></a>Hexo快速入门</h2><h3 id=\"创建一篇新文章\"><a href=\"#创建一篇新文章\" class=\"headerlink\" title=\"创建一篇新文章\"></a>创建一篇新文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"文章的标题\"</span></div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"进行本地预览\"><a href=\"#进行本地预览\" class=\"headerlink\" title=\"进行本地预览\"></a>进行本地预览</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div><div class=\"line\"><span class=\"comment\">#也可以使用更简单的命令来完成这件事</span></div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate  </div><div class=\"line\"><span class=\"comment\"># 简要命令</span></div><div class=\"line\">$ hexo g</div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"部署文件到git仓库中\"><a href=\"#部署文件到git仓库中\" class=\"headerlink\" title=\"部署文件到git仓库中\"></a>部署文件到git仓库中</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div><div class=\"line\"><span class=\"comment\">#使用命令组合可以在生成静态文件的同时将文件更新到git上</span></div><div class=\"line\">$ hexo deploy -g</div></pre></td></tr></table></figure>\n<p>更多信息： <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj1q0eiih00011v2whv45bptq","category_id":"cj1q0eiiq00041v2wxx1zrid5","_id":"cj1q0eiiy00091v2wx97gh4w4"},{"post_id":"cj1q0eiin00031v2w9hl9cllq","category_id":"cj1q0eiix00071v2wc2tfuxvf","_id":"cj1q0eiiz000b1v2w004n2hsm"}],"PostTag":[{"post_id":"cj1q0eiih00011v2whv45bptq","tag_id":"cj1q0eiiu00051v2wmmkmer6j","_id":"cj1q0eij0000e1v2ww8af60up"},{"post_id":"cj1q0eiih00011v2whv45bptq","tag_id":"cj1q0eiix00081v2wyo1mt29p","_id":"cj1q0eij1000f1v2wzi372p2p"},{"post_id":"cj1q0eiih00011v2whv45bptq","tag_id":"cj1q0eiiy000a1v2wmxm9ssun","_id":"cj1q0eij1000g1v2wln5n9rn5"},{"post_id":"cj1q0eiih00011v2whv45bptq","tag_id":"cj1q0eiiz000c1v2wixq2d5z6","_id":"cj1q0eij2000h1v2wr1gl5aen"},{"post_id":"cj1q0eiin00031v2w9hl9cllq","tag_id":"cj1q0eij0000d1v2we5n9xxrb","_id":"cj1q0eij2000i1v2w7b4dgnvq"}],"Tag":[{"name":"React.js","_id":"cj1q0eiiu00051v2wmmkmer6j"},{"name":"前端","_id":"cj1q0eiix00081v2wyo1mt29p"},{"name":"虚拟DOM","_id":"cj1q0eiiy000a1v2wmxm9ssun"},{"name":"组件化","_id":"cj1q0eiiz000c1v2wixq2d5z6"},{"name":"hexo","_id":"cj1q0eij0000d1v2we5n9xxrb"}]}}